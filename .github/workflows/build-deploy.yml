name: Pages Build and Deployment

on:
  schedule:
    - cron: "0 * * * *"
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    outputs:
      build-status: ${{ steps.build-status.outcome }}
      artifact-path: ${{ steps.archive.outputs.artifact }}

    steps:
      - name: Checkout public repository
        uses: actions/checkout@v3

      - name: Set up SSH deploy key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.PRIVATE_REPO_DEPLOY_KEY }}

      - name: Add GitHub to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Clone private repository
        run: |
          git clone git@github.com:${{ secrets.PRIVATE_REPO_NAME }}.git private-repo-temp

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: npm
          cache-dependency-path: private-repo-temp/package-lock.json

      # Dynamic base path injection
      - name: Patch Vite base path
        working-directory: private-repo-temp
        run: |
          echo "üîß Injecting base path"
          echo "import { defineConfig } from 'vite';" > vite.config.ts
          echo "export default defineConfig({ base: '/sparklingtracks.com/' });" >> vite.config.ts
          cat vite.config.ts

      - name: Install dependencies
        working-directory: private-repo-temp
        run: npm ci

      - name: Build project
        id: build-status
        working-directory: private-repo-temp
        run: |
          echo "üî® Building project"
          NODE_OPTIONS=--max_old_space_size=4096 npm run build

      - name: Archive dist folder
        id: archive
        run: |
          mkdir -p artifacts
          tar -czf artifacts/github-pages.tar.gz -C private-repo-temp/dist .
          echo "artifact=artifacts/github-pages.tar.gz" >> $GITHUB_OUTPUT

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: github-pages
          path: artifacts/github-pages.tar.gz

  report-build-status:
    runs-on: ubuntu-latest
    needs: build
    if: always()
    steps:
      - name: Report build status
        run: |
          if [[ "${{ needs.build.outputs.build-status }}" == "success" ]]; then
            echo "‚úÖ Build succeeded!"
          else
            echo "‚ùå Build failed!"
          fi

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ needs.build.outputs.build-status == 'success' }}

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: github-pages

      - name: Extract artifact
        run: |
          mkdir dist
          tar -xzf github-pages.tar.gz -C dist

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "github-actions@github.com"

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: dist
          token: ${{ secrets.DEPLOYMENT_TOKEN }}
          branch: gh-pages
          clean: true
